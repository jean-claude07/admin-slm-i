{"ast":null,"code":"var isArrayLike = require('./isArrayLike'),\n    isIndex = require('./isIndex'),\n    isObject = require('../lang/isObject');\n/**\n * Checks if the provided arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n */\n\n\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n\n  var type = typeof index;\n\n  if (type == 'number' ? isArrayLike(object) && isIndex(index, object.length) : type == 'string' && index in object) {\n    var other = object[index];\n    return value === value ? value === other : other !== other;\n  }\n\n  return false;\n}\n\nmodule.exports = isIterateeCall;","map":{"version":3,"sources":["/home/jean-claude/Documents/Managin-slmi/polemploie-admin/node_modules/rechart/node_modules/lodash/internal/isIterateeCall.js"],"names":["isArrayLike","require","isIndex","isObject","isIterateeCall","value","index","object","type","length","other","module","exports"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,eAAD,CAAzB;AAAA,IACIC,OAAO,GAAGD,OAAO,CAAC,WAAD,CADrB;AAAA,IAEIE,QAAQ,GAAGF,OAAO,CAAC,kBAAD,CAFtB;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,cAAT,CAAwBC,KAAxB,EAA+BC,KAA/B,EAAsCC,MAAtC,EAA8C;AAC5C,MAAI,CAACJ,QAAQ,CAACI,MAAD,CAAb,EAAuB;AACrB,WAAO,KAAP;AACD;;AACD,MAAIC,IAAI,GAAG,OAAOF,KAAlB;;AACA,MAAIE,IAAI,IAAI,QAAR,GACGR,WAAW,CAACO,MAAD,CAAX,IAAuBL,OAAO,CAACI,KAAD,EAAQC,MAAM,CAACE,MAAf,CADjC,GAEGD,IAAI,IAAI,QAAR,IAAoBF,KAAK,IAAIC,MAFpC,EAE6C;AAC3C,QAAIG,KAAK,GAAGH,MAAM,CAACD,KAAD,CAAlB;AACA,WAAOD,KAAK,KAAKA,KAAV,GAAmBA,KAAK,KAAKK,KAA7B,GAAuCA,KAAK,KAAKA,KAAxD;AACD;;AACD,SAAO,KAAP;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiBR,cAAjB","sourcesContent":["var isArrayLike = require('./isArrayLike'),\n    isIndex = require('./isIndex'),\n    isObject = require('../lang/isObject');\n\n/**\n * Checks if the provided arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n      ? (isArrayLike(object) && isIndex(index, object.length))\n      : (type == 'string' && index in object)) {\n    var other = object[index];\n    return value === value ? (value === other) : (other !== other);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n"]},"metadata":{},"sourceType":"script"}