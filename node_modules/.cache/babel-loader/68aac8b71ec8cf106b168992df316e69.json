{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/jean-claude/Documents/Managin-slmi/slmi-managin-front/src/App.js\";\nimport React, { Component } from 'react';\nimport Login from './pages/admin_login/Login';\nimport { Formik, Form, Field } from 'formik';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nexport class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: {}\n    };\n\n    this.componentDidMount = () => {\n      axios.get(`admins/${sessionStorage.id}`).then(resp => {\n        this.setState({\n          user: resp.data\n        });\n      });\n    };\n  }\n\n  render() {\n    console.log(this.state.user);\n    let app;\n\n    if (sessionStorage.id) {\n      app = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"bonjour admin \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => sessionStorage.clear(window.location.reload()),\n            children: \"deconnexion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    } else {\n      app = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this)\n      }, void 0, false);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: app\n    }, void 0, false);\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/home/jean-claude/Documents/Managin-slmi/slmi-managin-front/src/App.js"],"names":["React","Component","Login","Formik","Form","Field","axios","BrowserRouter","Router","Route","Switch","App","state","user","componentDidMount","get","sessionStorage","id","then","resp","setState","data","render","console","log","app","clear","window","location","reload"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,KAAtB,QAAkC,QAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AAEA,OAAO,MAAMC,GAAN,SAAkBV,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACjCW,KADiC,GAC3B;AACJC,MAAAA,IAAI,EAAE;AADF,KAD2B;;AAAA,SAKjCC,iBALiC,GAKb,MAAM;AACxBR,MAAAA,KAAK,CAACS,GAAN,CAAW,UAASC,cAAc,CAACC,EAAG,EAAtC,EAAyCC,IAAzC,CACEC,IAAI,IAAI;AACN,aAAKC,QAAL,CAAc;AACZP,UAAAA,IAAI,EAAEM,IAAI,CAACE;AADC,SAAd;AAGD,OALH;AAOD,KAbgC;AAAA;;AAejCC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWC,IAAvB;AACA,QAAIY,GAAJ;;AACA,QAAGT,cAAc,CAACC,EAAlB,EAAqB;AACnBQ,MAAAA,GAAG,gBACD;AAAA,+BACE;AAAA,oDAAkB;AAAQ,YAAA,OAAO,EAAE,MAAMT,cAAc,CAACU,KAAf,CAAqBC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAArB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,uBADF;AAKD,KAND,MAMK;AACHJ,MAAAA,GAAG,gBACH;AAAA,+BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF,uBADA;AAID;;AACD,wBACC;AAAA,gBACEA;AADF,qBADD;AAKD;;AAnCgC;AAsCnC,eAAed,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Login from './pages/admin_login/Login'\nimport {Formik, Form, Field} from 'formik'\nimport axios from 'axios'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nexport class App extends Component {\n  state={\n    user: {}\n  }\n\n  componentDidMount = () => {\n    axios.get(`admins/${sessionStorage.id}`).then(\n      resp => {\n        this.setState({\n          user: resp.data\n        })\n      }\n    )\n  }\n\n  render() {\n    console.log(this.state.user)\n    let app;\n    if(sessionStorage.id){\n      app = (\n        <>\n          <h1>bonjour admin <button onClick={() => sessionStorage.clear(window.location.reload())}>deconnexion</button> </h1>\n        </>\n      )\n    }else{\n      app = (\n      <>\n        <Login/>\n      </>)\n    }\n    return (\n     <>\n      {app}\n     </>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}