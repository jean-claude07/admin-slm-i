{"ast":null,"code":"var DataSet,\n    React,\n    array,\n    bool,\n    func,\n    invariant,\n    number,\n    oneOfType,\n    ref,\n    string,\n    extend = function (child, parent) {\n  for (var key in parent) {\n    if (hasProp.call(parent, key)) child[key] = parent[key];\n  }\n\n  function ctor() {\n    this.constructor = child;\n  }\n\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n  child.__super__ = parent.prototype;\n  return child;\n},\n    hasProp = {}.hasOwnProperty;\n\nReact = require('react');\ninvariant = require('invariant');\nref = React.PropTypes, array = ref.array, string = ref.string, bool = ref.bool, func = ref.func, number = ref.number, oneOfType = ref.oneOfType;\n\nDataSet = function (superClass) {\n  extend(DataSet, superClass);\n\n  function DataSet() {\n    return DataSet.__super__.constructor.apply(this, arguments);\n  }\n\n  DataSet.propTypes = {\n    backgroundColor: oneOfType([string, array]),\n    borderColor: string,\n    borderCapStyle: string,\n    borderDash: array,\n    borderDashOffset: number,\n    borderJoinStyle: string,\n    data: array.isRequired,\n    fill: bool,\n    fillColor: string,\n    label: string,\n    pointBackgroundColor: string,\n    pointBorderColor: string,\n    pointBorderWidth: number,\n    pointHighlightFill: string,\n    pointHighlightStroke: string,\n    pointHoverBackgroundColor: string,\n    pointHoverBorderColor: string,\n    pointHoverBorderWidth: number,\n    pointHoverRadius: number,\n    pointStrokeColor: string,\n    yAxisID: string\n  };\n\n  DataSet.prototype.render = function () {\n    return invariant(false, '<DataSet> elements are for passing data to the chart and shoudnt be rendered');\n  };\n\n  return DataSet;\n}(React.Component);\n\nmodule.exports = DataSet;","map":{"version":3,"sources":["/home/jean-claude/Documents/Managin-slmi/polemploie-admin/node_modules/rechart/lib/dataset.js"],"names":["DataSet","React","array","bool","func","invariant","number","oneOfType","ref","string","extend","child","parent","key","hasProp","call","ctor","constructor","prototype","__super__","hasOwnProperty","require","PropTypes","superClass","apply","arguments","propTypes","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","data","isRequired","fill","fillColor","label","pointBackgroundColor","pointBorderColor","pointBorderWidth","pointHighlightFill","pointHighlightStroke","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointHoverRadius","pointStrokeColor","yAxisID","render","Component","module","exports"],"mappings":"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","sourcesContent":["var DataSet, React, array, bool, func, invariant, number, oneOfType, ref, string,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nReact = require('react');\n\ninvariant = require('invariant');\n\nref = React.PropTypes, array = ref.array, string = ref.string, bool = ref.bool, func = ref.func, number = ref.number, oneOfType = ref.oneOfType;\n\nDataSet = (function(superClass) {\n  extend(DataSet, superClass);\n\n  function DataSet() {\n    return DataSet.__super__.constructor.apply(this, arguments);\n  }\n\n  DataSet.propTypes = {\n    backgroundColor: oneOfType([string, array]),\n    borderColor: string,\n    borderCapStyle: string,\n    borderDash: array,\n    borderDashOffset: number,\n    borderJoinStyle: string,\n    data: array.isRequired,\n    fill: bool,\n    fillColor: string,\n    label: string,\n    pointBackgroundColor: string,\n    pointBorderColor: string,\n    pointBorderWidth: number,\n    pointHighlightFill: string,\n    pointHighlightStroke: string,\n    pointHoverBackgroundColor: string,\n    pointHoverBorderColor: string,\n    pointHoverBorderWidth: number,\n    pointHoverRadius: number,\n    pointStrokeColor: string,\n    yAxisID: string\n  };\n\n  DataSet.prototype.render = function() {\n    return invariant(false, '<DataSet> elements are for passing data to the chart and shoudnt be rendered');\n  };\n\n  return DataSet;\n\n})(React.Component);\n\nmodule.exports = DataSet;\n"]},"metadata":{},"sourceType":"script"}